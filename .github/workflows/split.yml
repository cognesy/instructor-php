name: Split packages
on:
  push:
    tags: ['v*']

env:
  GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}

jobs:
  split:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        package:
          - local: 'packages/addons'
            repo:  'cognesy/instructor-addons'
          - local: 'packages/auxiliary'
            repo:  'cognesy/instructor-aux'
          - local: 'packages/http-client'
            repo:  'cognesy/instructor-http-client'
          - local: 'packages/hub'
            repo:  'cognesy/instructor-hub'
          - local: 'packages/instructor'
            repo:  'cognesy/instructor-struct'
          - local: 'packages/polyglot'
            repo:  'cognesy/instructor-polyglot'
          - local: 'packages/setup'
            repo:  'cognesy/instructor-setup'
          - local: 'packages/tell'
            repo:  'cognesy/instructor-tell'
          - local: 'packages/utils'
            repo:  'cognesy/instructor-utils'

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for proper splitting

      # Verify release notes exist for this package
      - name: Verify release notes
        id: check_notes
        run: |
          TAG_NAME=${{ github.ref_name }}
          NOTES_PATH="${{ matrix.package.local }}/release_notes/${TAG_NAME}.md"
          
          if [ -f "$NOTES_PATH" ]; then
            echo "NOTES_EXIST=true" >> $GITHUB_ENV
            echo "Notes found at $NOTES_PATH"
          else
            echo "NOTES_EXIST=false" >> $GITHUB_ENV
            echo "Warning: No release notes found at $NOTES_PATH"
            # Create a minimal release note if none exists
            mkdir -p "${{ matrix.package.local }}/release_notes"
            echo "# ${TAG_NAME}\n\nThis release is part of the main monorepo release ${TAG_NAME}." > "$NOTES_PATH"
            echo "Created minimal release notes"
          fi

      # ► push branch + tag
      - uses: symplify/monorepo-split-github-action@v2
        with:
          tag: ${{ github.ref_name }}             # e.g. v1.2.3
          package_directory: ${{ matrix.package.local }}
          repository_organization: cognesy
          repository_name: ${{ matrix.package.repo && matrix.package.repo.split('/')[1] || '' }}
          user_name: 'ci‑bot'
          user_email: 'ci@cognesy.com'

      # ► create GitHub Release with notes
      - uses: softprops/action-gh-release@v2
        if: github.ref_type == 'tag'
        with:
          repository: ${{ matrix.package.repo }}          # target repo
          tag_name:    ${{ github.ref_name }}             # v1.2.3
          body_path:   ${{ matrix.package.local }}/release_notes/${{ github.ref_name }}.md
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}